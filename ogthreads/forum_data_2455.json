{
    "instruction": "[INST] Analyze this file to learn MacBook motherboard repair. The 'definitions' section explains key technical terms. The 'threads' section contains real-world repair discussions. Use both sections to understand and learn how to troubleshoot MacBook issues. Posts from username 'larossmann' , 'dukefawks' , and '2informaticos' are posts from trusted experts.[/INST]",
    "definitions": {},
    "threads": [
        {
            "post_id": 2455,
            "thread_id": 2455,
            "title": "How To Read/Write/Erase Apple EFI-SPI-ROM with Raspberry Pi",
            "user_id": 46,
            "username": "Crizz",
            "post_date": "2016-05-09 04:24:51",
            "message": "[SIZE=14px][FONT=verdana]Here I will explain the way I fixed some boards by rewriting the Apple EFI SPI ROM.\n\nYou should try this if your machine has the following symptoms:[/FONT][/SIZE]\n[LIST]\n[*][FONT=verdana][SIZE=14px]stuck in a start-stop loop without posting[/SIZE][/FONT]\n[*][FONT=verdana][SIZE=14px]it will boot, chime, load the OS, but the WiFi, and/or the graphics will behave irregular.[/SIZE][/FONT]\n[*][FONT=verdana][SIZE=14px]it will boot, chime, but will not load an OS and gets stuck on the loading bar. (This can also be an SMC issue)[/SIZE][/FONT]\n[*][FONT=verdana][SIZE=14px]it will boot, chime, but stays on a black or white screen and doesn't even reach a loading bar[/SIZE][/FONT]\n[/LIST]\n \n[FONT=verdana][SIZE=14px]What you need:[/SIZE][/FONT]\n[LIST]\n[*][FONT=verdana][SIZE=14px]Raspberry PI[/SIZE][/FONT]\n[*][FONT=verdana][SIZE=14px]min. 4GB microSD[/SIZE][/FONT]\n[*][FONT=verdana][SIZE=14px]4x 150\u2126[/SIZE][/FONT]\n[*][FONT=verdana][SIZE=14px]1x 47\u00b5F Cap[/SIZE][/FONT]\n[*][FONT=verdana][SIZE=14px]optional a SOP8 SOP Clip Cable[/SIZE][/FONT]\n[/LIST]\n \n[SIZE=14px][FONT=verdana]First localize your SPI ROM on your board. I recommend to desolder it before flashing it.[/FONT][/SIZE]  [TABLE=\"border: 1, cellpadding: 1, width: 500\"]\n \t \t\t[TR]\n \t\t\t[TD][URL]http://imgur.com/VS2sa8e[/URL][/TD]\n \t\t\t[TD][URL]http://imgur.com/RNqpjjH[/URL][/TD]\n \t\t[/TR]\n \t [/TABLE]\n [SIZE=14px][FONT=verdana]On the left side normal SO-8 package. On the right sight MacBook Air has a different package but in most cases the same PIN-out.\nI managed to use the clamp to flash the right chip as well and it worked like a charm:[/FONT][/SIZE]  [TABLE=\"border: 1, cellpadding: 1, width: 500\"]\n \t \t\t[TR]\n \t\t\t[TD][URL]http://imgur.com/APmAEcX[/URL][/TD]\n \t\t[/TR]\n \t [/TABLE]\n [SIZE=14px][FONT=verdana]Check if your chip is supported by the free software Flashrom:\n[URL]https://www.flashrom.org/Supported_hardware[/URL]\n\nHook up the SPI:[/FONT][/SIZE]  [TABLE=\"border: 1, cellpadding: 1, width: 500\"]\n \t \t\t[TR]\n \t\t\t[TD][SIZE=14px][FONT=verdana][URL]http://imgur.com/EAXwlfw[/URL][IMG]http://imgur.com/EAXwlfw[/IMG][/FONT][/SIZE][/TD]\n \t\t[/TR]\n \t [/TABLE]\n [SIZE=14px][FONT=verdana]This is my version: [/FONT][/SIZE]  [TABLE=\"border: 1, cellpadding: 1, width: 500\"]\n \t \t\t[TR]\n \t\t\t[TD][URL]http://imgur.com/Mhuv8em[/URL][/TD]\n \t\t\t[TD][URL]http://imgur.com/dtSv2ca[/URL][/TD]\n \t\t[/TR]\n \t [/TABLE]\n [SIZE=14px][FONT=verdana]Download and install Raspbian on your Raspberry PI:\n[URL]https://www.raspberrypi.org/downloads/[/URL]\n\nAfter the first boot go to: [I]Menu [/I]-> [I]Preferences [/I]-> [I]Raspberry Pi Configuration[/I] -> [I]Expand Filesystem[/I][/FONT][/SIZE]  [TABLE=\"border: 1, cellpadding: 1, width: 500\"]\n \t \t\t[TR]\n \t\t\t[TD][URL]http://imgur.com/0JOyftn[/URL][/TD]\n \t\t[/TR]\n \t [/TABLE]\n [SIZE=14px][FONT=verdana]Then go to \u201c[I]Interfaces[/I]\u201d Tab and Enable SPI:[/FONT][/SIZE]  [TABLE=\"border: 1, cellpadding: 1, width: 500\"]\n \t \t\t[TR]\n \t\t\t[TD][URL]http://imgur.com/w2kC4ic[/URL][/TD]\n \t\t[/TR]\n \t [/TABLE]\n [SIZE=14px][FONT=verdana][B]Reboot!![/B]\n\nAfter that we can download Flashrom and configure it.\nFirst install a few libraries that Flashrom relies on:\nOpen a Terminal and type:\n[B][COLOR=#008000][I]sudo apt-get install pciutils\nsudo apt-get install libftdi-dev\nsudo apt-get install libusb-dev\nsudo apt-get install libusb-1.0\nsudo apt-get install libpci-dev[/I][/COLOR][/B]\n\nThen you need to download the latest flashrom version:\n[I][B][COLOR=#008000]sudo git clone [/COLOR][URL=\"https://github.com/stefanct/flashrom.git\"][COLOR=#008000]https://github.com/stefanct/flashrom.git[/COLOR][/URL][/B][/I]\n\nIt will be downloaded into a folder called \"flashrom\" so change directory into the folder:\n[COLOR=#008000][I][B]cd flashrom\nsudo make\nsudo make install\nsudo modprobe spi_bcm2835\nsudo modprobe spidev[/B][/I][/COLOR]\n\n\n[B]Now comes the start of the Flashrom process:[/B]\n\nGet to the help page:\n[I][B][COLOR=#008000]sudo flashrom \u2013help[/COLOR][/B][/I]\n\nList the supported chips:\n[COLOR=#008000][I][B]sudo flashrom -L[/B][/I][/COLOR]\n\nRead the flash chip by using the below command three times:\n[COLOR=#008000][B][I]sudo flashrom -r oldefi1.bin -V -p linux_spi:dev=/dev/spidev0.0[/I][/B][/COLOR]\n\nIf the SPI ROM wouldn\u2019t be recognized type the SPI ROM number manually:\n[COLOR=#008000][B][I]sudo flashrom -r oldefi1.bin -c \"MX25L1605\" -V -p linux_spi:dev=/dev/spidev0.0[/I][/B][/COLOR]\n\nNow make sure the three dumps are absolutely identical!!\n[I][B][COLOR=#008000]I compared the files with a hexeditor HxD: [/COLOR][URL=\"https://mh-nexus.de/en/hxd/\"][COLOR=#008000]https://mh-nexus.de/en/hxd/[/COLOR][/URL][/B][/I]\n\nErase the chip after you have verified all three reads have no differences:\n[COLOR=#008000][B][I]sudo flashrom -E -V -p linux_spi:dev=/dev/spidev0.0[/I][/B][/COLOR]\n\nAfter modifying the donor-file write it back:\n[COLOR=#008000][B][I]sudo flashrom -w newEFI.bin -V -p linux_spi:dev=/dev/spidev0.0[/I][/B][/COLOR]\n\n(Optional) Verify the chips contents with the file that you just wrote to ensure its integrity:\n[COLOR=#008000][B][I]sudo flashrom -v newEFI.bin -V -p linux_spi:dev=/dev/spidev0.0[/I][/B][/COLOR]\n\nIf you haven\u2019t run into any problems you will have a freshly flashed chip :-)\n\n\n[U][B]How to modify/ repair the dump- / donor-file:[/B][/U]\n\nExplanation: The MacBook will not run properly or not run at all without a proper management engine. When a new MacBook is turned on for the first time the Bios and the CPU perform a \"handshake\" allowing them to work together. So in turn, if your management engine gets corrupted, and you try to copy the EFI from another MacBook of the same model, it will still not work because the CPU knows it\u2019s not the original EFI-BIOS. In best case the MacBook will run but veeeery slow.\n\nIn my case I found a complete clean EFI-dump for my machine in the web. There are a lot of places where you can download EFI-dumps (clean or not) for free.\n\nYou can check your EFI version by analyzing your machine\u00b4s EFI-dump with ME-Analyzer:\n[URL=\"http://www.mediafire.com/download/mn3dd969i122itq/ME+Analyzer+v1.5.1.rar\"]http://www.mediafire.com/download/mn...zer+v1.5.1.rar[/URL]\n\nOnce you extract the folder, just drag and drop your EFI-file onto the [B]MEA.bat[/B] file, a cmd window will open and give you the info. You will see your ME-version and that it is locked.\nIf you find a EFI-dump for your machine in the web check it if it is unlocked.[/FONT][/SIZE]  [TABLE=\"border: 1, cellpadding: 1, width: 500\"]\n \t \t\t[TR]\n \t\t\t[TD][URL]http://imgur.com/HxQ6Jaj[/URL][/TD]\n \t\t[/TR]\n \t [/TABLE]\n [SIZE=14px][FONT=verdana]If you cannot find a clean EFI-file you have to build a working EFI-file by yourself.\nFollow this: [URL=\"https://www.ghostlyhaks.com/blog/apple-efi/25-clean-me-region\"]https://www.ghostlyhaks.com/blog/app...lean-me-region[/URL]\n\n\nNow open your dump- and donor-file with a hex-editor:\n[ATTACH=CONFIG]temp_243_1462791989353_1[/ATTACH]\n\nIn my case you can clearly see the corruption in my dump since it looks kind of weird.\nIn a normal case the EFI-file should look like the right side!\n\nNext check and compare the length of your dump- and donor-file.\nSelect all by pressing CTRL+A and compare the lengths of your files:[/FONT][/SIZE]  [TABLE=\"border: 1, cellpadding: 1, width: 500\"]\n \t \t\t[TR]\n \t\t\t[TD][URL]http://imgur.com/nk3iaKF[/URL][/TD]\n \t\t[/TR]\n \t [/TABLE]\n [SIZE=14px][FONT=verdana]It is important that the two files have the same length!!!\n\nNow you will need to replace the serial of the donated dump with your own serial in order to not register over a foreign Mac. You can do this by simply searching for \"[I]override-version[/I]\" and on that same line there will be an 11 to 12 digit serial number that you will replace with your own:[/FONT][/SIZE]  [TABLE=\"border: 1, cellpadding: 1, width: 500\"]\n \t \t\t[TR]\n \t\t\t[TD][SIZE=14px][FONT=verdana][URL]http://imgur.com/PAevC9n[/URL]\n\t\t\t[ATTACH=CONFIG]temp_245_1462792153578_280[/ATTACH][/FONT][/SIZE][/TD]\n \t\t[/TR]\n \t [/TABLE]\n [SIZE=14px][FONT=verdana]Next search for \u201c[I]$SVS[/I]\u201d in the dump and you should find 2 instances. The first instance is what you will need to clear out making sure to keep the file length the same. It is safe to replace it with an empty value such as \u201cF\u201d. The string including the $SVS should be replaced! Keep in mind not to delete anything rather to overwrite it. The file size has to be exactly the same size as the chip or it will return an error:[/FONT][/SIZE]  [TABLE=\"border: 1, cellpadding: 1, width: 500\"]\n \t \t\t[TR]\n \t\t\t[TD][SIZE=14px][FONT=verdana][URL]http://imgur.com/MRrX6E1[/URL]\n\t\t\t[ATTACH=CONFIG]temp_246_1462792216047_549[/ATTACH][/FONT][/SIZE][/TD]\n \t\t[/TR]\n \t [/TABLE]\n [SIZE=14px][FONT=verdana]Finally save your newEFI.bin and flash it back to your chip like described above.\n\nNOTE: Here are a few things worth mentioning...[/FONT][/SIZE]\n[LIST]\n[*][SIZE=14px][FONT=verdana]Make sure your chip is supported in Flashrom which is the program you will be using to talk to the chip.[/FONT][/SIZE]\n[*][SIZE=14px][FONT=verdana]You need to make sure the clip makes a solid connection to avoid misreads.[/FONT][/SIZE]\n[*][SIZE=14px][FONT=verdana]You need to verify your chips datasheet to correctly identify the pin-out to the SPI programmer.[/FONT][/SIZE]\n[*][SIZE=14px][FONT=verdana]The wires connecting the clip to the SPI programmer need not be any longer than 8 cm.[/FONT][/SIZE]\n[*][SIZE=14px][FONT=verdana]Always make sure to back up your original dump and verify the write.[/FONT][/SIZE]\n[/LIST]\n \n[SIZE=14px][FONT=verdana]When everything went well your machine will boot and chime normally.\nIf not \u2026 you have to look for another solution for your problem.\n\n\nEnjoy :-)[/FONT][/SIZE]\n\n\n  [HR][/HR][SIZE=14px][FONT=verdana]Sources:\n[URL=\"http://www.win-raid.com/t58f16-Guide-Recover-from-failed-BIOS-flash-using-Raspberry-PI.html\"]http://www.win-raid.com/t58f16-Guide...pberry-PI.html[/URL]\n[URL]https://www.flashrom.org/RaspberryPi[/URL]\n[URL=\"https://github.com/bibanon/Coreboot-ThinkPads/wiki/Hardware-Flashing-with-Raspberry-Pi\"]https://github.com/bibanon/Coreboot-...h-Raspberry-Pi[/URL]\n[URL=\"https://www.ghostlyhaks.com/blog/apple-efi/25-clean-me-region\"]https://www.ghostlyhaks.com/blog/app...lean-me-region[/URL]\n[URL=\"https://ghostlyhaks.com/blog/apple-efi/18-how-to-hack-apple-efi-2\"]https://ghostlyhaks.com/blog/apple-e...ck-apple-efi-2[/URL]\n[URL=\"https://www.raspberrypi.org/forums/viewtopic.php?f=28&t=105360\"]https://www.raspberrypi.org/forums/v...?f=28&t=105360[/URL]\n[URL=\"https://www.raspberrypi.org/documentation/configuration/raspi-config.md\"]https://www.raspberrypi.org/document...aspi-config.md[/URL]\n[URL]https://github.com/nfd/spi-flash-programmer[/URL]\n[URL]https://translate.google.de/?hl=de[/URL][/FONT][/SIZE]"
        },
        {
            "post_id": 2456,
            "thread_id": 2455,
            "title": "How To Read/Write/Erase Apple EFI-SPI-ROM with Raspberry Pi",
            "user_id": 55,
            "username": "JorgePayar",
            "post_date": "2016-05-09 08:35:36",
            "message": "Thank you so much Crizz. Very good post, I really appreciate this.\nThanks again mate :)"
        },
        {
            "post_id": 2958,
            "thread_id": 2455,
            "title": "How To Read/Write/Erase Apple EFI-SPI-ROM with Raspberry Pi",
            "user_id": 46,
            "username": "Crizz",
            "post_date": "2016-05-24 09:25:31",
            "message": "I have to add some information here:\nI've noticed that every single machine with faulty SPI ROM that I had also had a bad RAM Bank!\nWhen I think about it it makes sense. The faulty RAM writes back some strange bits and this fucks up the SPI ROM!\nThis will most likely happen if you try to update your system.\n\nOn Mac Pros you can just change the RAM stick bun on Airs the changing is trickier since the chips are soldered on the board.\nI recently had some success changing a hynix chip on a Air.\nTested with \"rember\" before and after. IT WORKED :)\n\n[ATTACH]2959._xfImport[/ATTACH]"
        },
        {
            "post_id": 2961,
            "thread_id": 2455,
            "title": "How To Read/Write/Erase Apple EFI-SPI-ROM with Raspberry Pi",
            "user_id": 166,
            "username": "GyroJosh",
            "post_date": "2016-05-24 10:12:26",
            "message": "Wow thanks for this! :)"
        },
        {
            "post_id": 2962,
            "thread_id": 2455,
            "title": "How To Read/Write/Erase Apple EFI-SPI-ROM with Raspberry Pi",
            "user_id": 1,
            "username": "larossmann",
            "post_date": "2016-05-24 12:32:26",
            "message": "How did you figure out which RAM chip was bad?"
        },
        {
            "post_id": 2964,
            "thread_id": 2455,
            "title": "How To Read/Write/Erase Apple EFI-SPI-ROM with Raspberry Pi",
            "user_id": 46,
            "username": "Crizz",
            "post_date": "2016-05-24 14:26:35",
            "message": "Well this is a good good question. Actually a was lucky since I had no idea which one was bad.\n\nI was looking in the web how to identify which chip is bad depending on the address in the log:\n\n[I]FAILURE! Data mismatch at local BUFA address 0x00000001394fa4e0, BUFB address 0x000000017e406ce0\nBUFA Data: 0x9494949494949494, BUFB Data: 0x[COLOR=#FF0000]d[/COLOR]494949494949494[/I]\n\nBut no success...\n\nSo I decided to reflow the entire RAM section --> Problem still there\n\nI had as result no other choice rather than swapping all the chips one by one and run a test after each swap.\nSo my choice fell on slot B at the corner and after the first swap - BANG - no errors anymore :)\n\nMachine runs now and no more kernel panics"
        },
        {
            "post_id": 8517,
            "thread_id": 2455,
            "title": "How To Read/Write/Erase Apple EFI-SPI-ROM with Raspberry Pi",
            "user_id": 513,
            "username": "stray77",
            "post_date": "2016-10-24 01:56:49",
            "message": "Here's my test setup before I tackle the real deal.  I used 220ohm resistors and a 200uF capacitor as substitutes. It worked beautifully. Thank you.\n[url]http://i.imgur.com/IQaEeiy.jpg[/url]\nmy test chip was a 1MB EN25F80-75HCP off an old compaq latop."
        },
        {
            "post_id": 12306,
            "thread_id": 2455,
            "title": "How To Read/Write/Erase Apple EFI-SPI-ROM with Raspberry Pi",
            "user_id": 147,
            "username": "RavetcoFX",
            "post_date": "2017-01-04 21:56:27",
            "message": "^ Absolute nightmare that never sounds like it would be worth it"
        }
    ]
}